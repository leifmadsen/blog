<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Asterisk 10 on Asterisk, and other worldly endeavours</title>
    <link>http://blog.leifmadsen.com/tags/asterisk-10/</link>
    <description>Recent content in Asterisk 10 on Asterisk, and other worldly endeavours</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Aug 2011 20:27:03 +0000</lastBuildDate>
    <atom:link href="http://blog.leifmadsen.com/tags/asterisk-10/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Asterisk 10 == Asterisk 1.^H^H10</title>
      <link>http://blog.leifmadsen.com/blog/2011/08/29/asterisk-10--asterisk-1.hh10/</link>
      <pubDate>Mon, 29 Aug 2011 20:27:03 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2011/08/29/asterisk-10--asterisk-1.hh10/</guid>
      <description>&lt;p&gt;In case you missed it, the next version of Asterisk is now in beta, and at the same time, has undergone a minor version numbering scheme. As it is unlikely that Asterisk will ever have a 2.0 release since for years now, that has generally meant Asterisk would undergo a major underlying change in both how it was programmed and the user experience (and since it would be a major disruption to the Asterisk community), it was deemed unnecessary to utilize the 1. preamble in front of the version numbers.&lt;/p&gt;

&lt;p&gt;Asterisk versioning has used the following as branch numbers over the years:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.0&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;1.2&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;1.4&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;1.6.0&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;1.6.1&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;1.6.2&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;1.8&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The next version to have followed Asterisk 1.8 would have been Asterisk 1.10. Since it has been determined the prefix of &lt;em&gt;1.&lt;/em&gt; is now superfluous, it was simply dropped. So instead of the version following 1.8 being:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.8&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;1.10&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We now have&amp;hellip;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.8&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;10&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This should hopefully lead to a slightly less confusing numbering scheme going forward as there will no longer be the skipped odd numbers. Kevin Fleming at Digium explains the reasons for dropping the leading &amp;lsquo;one dot&amp;rsquo; in his blog post at &lt;a href=&#34;http://blogs.digium.com/2011/07/21/the-evolution-of-asterisk-or-how-we-arrived-at-asterisk-10/&#34;&gt;http://blogs.digium.com/2011/07/21/the-evolution-of-asterisk-or-how-we-arrived-at-asterisk-10/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As Asterisk moves forward, this is how versions will look:&lt;/p&gt;

&lt;p&gt;Asterisk branch versions (which signify major version increases) will increment singularly:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;10&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;11&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;12&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Within each of those branches minor versions will be released for the time the branch is supported. (Information about the support level of Asterisk branches is available at &lt;a href=&#34;https://wiki.asterisk.org/wiki/display/AST/Asterisk+Versions&#34;&gt;https://wiki.asterisk.org/wiki/display/AST/Asterisk+Versions&lt;/a&gt;.) These would be the bug fixes that an Asterisk implementer/administrator would deploy. Some examples include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;10.0.0&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;10.1.0&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;10.2.0&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;10.3.0&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;10.4.0&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You&amp;rsquo;ll have noticed the implicit declaration of the &amp;lsquo;dot zero&amp;rsquo; on the end of the version. In the past when a security release or regression is resolved for a tag, an additional version number is added to the end. Lets take Asterisk 10.2.0 as an example of a version that was to receive a change to the tag after initial release, perhaps for a security update. Instead of requiring administrators to update to a tag of Asterisk that has changes in addition to the security changes, a new tag with only the changes required to satisfy the resolution of the security issue are added.&lt;/p&gt;

&lt;p&gt;(The mechanics of which are essentially to copy the existing tag to a new tag number, merge the changes, then repackage the new tag. The equivalent of copying the contents of one directory to another new directory, and making a single change.)&lt;/p&gt;

&lt;p&gt;So for a security issue being resolved in Asterisk 10.2.0, there would be a release of Asterisk 10.2.1. If additional changes were made to the base tag of 10.2.0, then you would see:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;10.2.0&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;10.2.1&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;10.2.2&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only spot testing should be required for upgrades between 10.2.0 -&amp;gt; 10.2.1 -&amp;gt; 10.2.2. Of course more thorough testing between something like 10.2.0 and 10.3.0 would be required by the administrator.&lt;/p&gt;

&lt;p&gt;Hopefully this helps alleviate any remaining confusion.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>