<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation on Asterisk, and other worldly endeavours</title>
    <link>http://blog.leifmadsen.com/tags/documentation/</link>
    <description>Recent content in Documentation on Asterisk, and other worldly endeavours</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 29 Sep 2010 14:25:50 +0000</lastBuildDate>
    <atom:link href="http://blog.leifmadsen.com/tags/documentation/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Scheduling automated calls between two participants with res_calendar</title>
      <link>http://blog.leifmadsen.com/blog/2010/09/29/scheduling-automated-calls-between-two-participants-with-res_calendar/</link>
      <pubDate>Wed, 29 Sep 2010 14:25:50 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2010/09/29/scheduling-automated-calls-between-two-participants-with-res_calendar/</guid>
      <description>&lt;p&gt;Here is a little dialplan snippet I wrote this morning for the next edition of the Asterisk book. While I&amp;rsquo;m not going to delve into all the aspects of setting up res_calendar like we do in the book, I thought for those of you who might already have this working might enjoy it.&lt;/p&gt;

&lt;p&gt;(The calendaring modules are available in Asterisk 1.8, which is currently in release candidate status. Check out &lt;a href=&#34;http://www.asterisk.org/downloads&#34;&gt;http://www.asterisk.org/downloads&lt;/a&gt; for the current version.)&lt;/p&gt;

&lt;p&gt;I started with this little bit of dialplan that gets triggered when a call is answered from the calendaring module:&lt;/p&gt;

&lt;p&gt;﻿﻿﻿&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[AutomatedMeetingSetup]
exten =&amp;gt; start,1,Verbose(2,Triggering meeting setup for two participants)
   same =&amp;gt; n,Set(DeviceToDial=${FILTER(0-9A-Za-z,${CALENDAR_EVENT(location)})})
   same =&amp;gt; n,Dial(SIP/${DeviceToDial},30)
   same =&amp;gt; n,Hangup()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The location field in my calendar event (which in this case is labeled as Destination in my Google Calendar) contains the string 0000FFFF0002 which is the device identifier in my example.&lt;/p&gt;

&lt;p&gt;Once you get that working, the cool magic happens below. In the following example, a call is placed from the calendaring module when a meeting needs to take place between two participants. The first part of the dialplan allows the first person called to accept or reject the meeting, and if accepted, to record a message for the other party. Once that recording is saved, the dialplan will go ahead and trigger a call to the other meeting participant.&lt;/p&gt;

&lt;p&gt;When that meeting participant answers the call, a Macro() is employed to allow them to listen to the recorded message left by the first party, (i.e. &amp;ldquo;Hey Jim, this is Leif. We have a meeting scheduled right now.&amp;rdquo;). That person is then presented the same option to accept or reject the call by pressing 1 or 2.&lt;/p&gt;

&lt;p&gt;Of course the dialplan could even by further expanded to play back messages when the calls were rejected, the option for the called party to leave a return message of why they are rejecting the call, and maybe even the ability to post-pone the call for a few minutes. All it takes is some clever dialplan!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[AutomatedMeetingSetup]
exten =&amp;gt; start,1,Verbose(2,Triggering meeting setup for two participants)
same =&amp;gt; n,Read(CheckMeetingAcceptance,to-confirm-wakeup&amp;amp;press-1&amp;amp;otherwise&amp;amp;press-2,,1)
same =&amp;gt; n,GotoIf($[&amp;quot;${CheckMeetingAcceptance}&amp;quot; != &amp;quot;1&amp;quot;]?hangup,1)

same =&amp;gt; n,Playback(silence/1&amp;amp;pls-rcrd-name-at-tone&amp;amp;and-prs-pound-whn-finished)
same =&amp;gt; n,Set(__RandomNumber=${RAND()})
same =&amp;gt; n,Record(/tmp/meeting-invite-${RandomNumber}.ulaw)

same =&amp;gt; n,Set(DeviceToDial=${FILTER(0-9A-Za-z,${CALENDAR_EVENT(location)})})
same =&amp;gt; n,Dial(SIP/${DeviceToDial},30,M(CheckConfirm))
same =&amp;gt; n,Hangup()

exten =&amp;gt; hangup,1,Verbose(2,Call was rejected)
same =&amp;gt; n,Playback(vm-goodbye)
same =&amp;gt; n,Hangup()

[macro-CheckConfirm]
exten =&amp;gt; s,1,Verbose(2,Allowing called party to accept or reject)
same =&amp;gt; n,Playback(/tmp/meeting-invite-${RandomNumber})
same =&amp;gt; n,Read(CheckMeetingAcceptance,to-confirm-wakeup&amp;amp;press-1&amp;amp;otherwise&amp;amp;press-2,,1)
same =&amp;gt; n,GotoIf($[&amp;quot;${CheckMeetingAcceptance}&amp;quot; != &amp;quot;1&amp;quot;]?hangup,1)

exten =&amp;gt; hangup,1,Verbose(2,Call was rejected by called party)
same =&amp;gt; n,Playback(vm-goodbye)
same =&amp;gt; n,Hangup()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Starting work on Asterisk: TFoT 3rd edition</title>
      <link>http://blog.leifmadsen.com/blog/2009/11/23/starting-work-on-asterisk-tfot-3rd-edition/</link>
      <pubDate>Mon, 23 Nov 2009 14:03:35 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2009/11/23/starting-work-on-asterisk-tfot-3rd-edition/</guid>
      <description>&lt;p&gt;As many of you know, I&amp;rsquo;m a co-author of &lt;a href=&#34;http://www.oreilly.com/catalog/asterisk&#34;&gt;Asterisk: The Future of Telephony&lt;/a&gt;. While my girlfriend is away in Mexico for a week with the girls, I&amp;rsquo;m going to try and focus a bunch of attention on getting A:TFoT 3rd edition started (which is much overdue).&lt;/p&gt;

&lt;p&gt;If you have any ideas for topics you would like covered in the new edition, or something that wasn&amp;rsquo;t covered as heavily as you wanted in the 1st and 2nd editions, feel free to let me know, and your ideas will be considered! I hope to get the installation chapter written today, and as things progress, we&amp;rsquo;ll get them posted up on the web (likely somewhere on &lt;a href=&#34;http://www.asteriskdocs.org&#34;&gt;http://www.asteriskdocs.org&lt;/a&gt;) for review by the community.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re going to try and write mostly in the open as we have things ready to go, so a more thorough community review can be done this time around rather than the closed review we&amp;rsquo;ve used in the past and the &amp;ldquo;get it when it&amp;rsquo;s done&amp;rdquo; approach.&lt;/p&gt;

&lt;p&gt;More information to follow in the coming week(s)!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building Queues with Asterisk</title>
      <link>http://blog.leifmadsen.com/blog/2009/11/14/building-queues-with-asterisk/</link>
      <pubDate>Sat, 14 Nov 2009 15:07:19 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2009/11/14/building-queues-with-asterisk/</guid>
      <description>&lt;p&gt;Wow it&amp;rsquo;s been a long time since I&amp;rsquo;ve update my blog. Well, lets do that! :)&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve just posted some documentation to the Asterisk issue tracker for review. It&amp;rsquo;s about building queues with Asterisk. It is the start of probably 2 or 3 sets of documentation on building queues with Asterisk that I&amp;rsquo;ll be submitting. You can find the documentation here for now:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://issues.asterisk.org/view.php?id=16237&#34;&gt;https://issues.asterisk.org/view.php?id=16237&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This documentation will likely be merged into core Asterisk at some point in the near future (doc/ subdirectory of your Asterisk source) and likely posted on &lt;a href=&#34;http://blogs.asterisk.org&#34;&gt;http://blogs.asterisk.org&lt;/a&gt; as well.&lt;/p&gt;

&lt;p&gt;Check it out, and let me know if you find any spelling errors, documentation errors, anything that isn&amp;rsquo;t clear, or errors in the examples. Of course suggestions for future documentation to be written would also be welcomed.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>