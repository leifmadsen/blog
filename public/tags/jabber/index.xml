<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jabber on Asterisk, and other worldly endeavours</title>
    <link>http://blog.leifmadsen.com/tags/jabber/</link>
    <description>Recent content in Jabber on Asterisk, and other worldly endeavours</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Jul 2009 03:47:57 +0000</lastBuildDate>
    <atom:link href="http://blog.leifmadsen.com/tags/jabber/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>HowTo: Getting Jabber/XMPP notifications from your PBX</title>
      <link>http://blog.leifmadsen.com/blog/2009/07/18/howto-getting-jabber/xmpp-notifications-from-your-pbx/</link>
      <pubDate>Sat, 18 Jul 2009 03:47:57 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2009/07/18/howto-getting-jabber/xmpp-notifications-from-your-pbx/</guid>
      <description>

&lt;p&gt;I just have to write up a quick post to show you JUST HOW SIMPLE it is to get interesting events from your PBX via Jabber. Right now I&amp;rsquo;m using it to notify me of anyone trying out my test ISN number, or whenever they join my conference bridge (good reminder if I lose track of time and forget that I scheduled some people to join my conference room).&lt;/p&gt;

&lt;p&gt;This is based on Asterisk 1.4, although the same configuration should work on 1.6, but I like to try and give 1.4 examples where I can for those of you still running 1.4.&lt;/p&gt;

&lt;p&gt;So the first thing you need to do is configure Asterisk to connect to a Jabber server. I like to use the Google Jabber servers since it saves me from setting one up :) I have setup Google Apps as well so that I can use my own domain, but using a Gmail address should work just as well.&lt;/p&gt;

&lt;p&gt;Configuring res_jabber (the Jabber module in Asterisk) is nice and easy. The main thing to notice is that I uncommented the &amp;lsquo;debug&amp;rsquo; option as the default is to have a bunch of debugging on the console. Find below the entire jabber.conf file from &lt;em&gt;/etc/asterisk&lt;/em&gt; based on the sample file, but with the required options uncommented for connecting to talk.google.com. Note that I&amp;rsquo;ve created a Jabber account specifically for my Asterisk box, although I&amp;rsquo;m sure you could use an existing account if you wanted.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;[general]
debug=no                                   ;;Turn on debugging by default.
;autoprune=yes                           ;;Auto remove users from buddy list.
;autoregister=yes                        ;;Auto register users from buddy list.

[asterisk]                                   ;;label
type=client                                 ;;Client or Component connection
serverhost=talk.google.com          ;;Route to server for example,
                                                ;;	talk.google.com
username=asterisk@leifmadsen.com        ;;Username with optional roster.
secret=welcome                                    ;;Password
port=5222                                            ;;Port to use defaults to 5222
usetls=yes                                           ;;Use tls or not
usesasl=yes                                         ;;Use sasl or not
buddy=leif@leifmadsen.com                    ;;Manual addition of buddy to list.
statusmessage=&amp;quot;I am available&amp;quot;               ;;Have custom status message for
                                                           ;;Asterisk.
;timeout=100                                        ;;Timeout on the message stack.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You&amp;rsquo;ll notice that I&amp;rsquo;ve added the buddy &amp;lsquo;leif@leifmadsen.com&amp;rsquo; manually. In order to be able to send messages to the &amp;lsquo;leif@leifmadsen.com&amp;rsquo; contact, I need to add them to the buddy list in the Asterisk memory. Once Asterisk goes to send a message via the JabberSend() application, then you will get an authorization request. Once the authorization has been granted, then you will be able to get messages.&lt;/p&gt;

&lt;p&gt;Now that we have configured jabber.conf, lets reload the res_jabber module.&lt;/p&gt;

&lt;p&gt;From the Asterisk CLI, run:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;*CLI&amp;gt; module reload res_jabber.so&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then we can verify we have connected to the server correctly by running:&lt;/p&gt;

&lt;p&gt;``` *CLI&amp;gt; jabber show connected
Jabber Users and their status:&lt;/p&gt;

&lt;h2 id=&#34;user-asterisk-leifmadsen-com-connected&#34;&gt;User: asterisk@leifmadsen.com     - Connected&lt;/h2&gt;

&lt;p&gt;Number of users: 1```&lt;/p&gt;

&lt;p&gt;And we can run &lt;code&gt;jabber test&lt;/code&gt; to do a verification everything is OK:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;*CLI&amp;gt; jabber test
User: leif@leifmadsen.com
Resource: linux918E72D1
client: http://pidgin.im/caps
version: 2.5.5
Jingle Capable: 0
Priority: 1
Status: 1
Message:&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Oooh a working message stack!&lt;/p&gt;

&lt;p&gt;Now that everything looks good to go, lets send a message over Jabber!&lt;/p&gt;

&lt;p&gt;From the Dialplan, we need to use the JabberSend() application to send us some information. The example I&amp;rsquo;ll use will send a message whenever someone joins my conference room.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[incoming]
exten =&amp;gt; 7070,1,Verbose(2,${CALLERID(all)} is joining the conference bridge.)
exten =&amp;gt; 7070,n,JabberSend(asterisk,leif@leifmadsen.com,${CALLERID(all)} is joining the conference bridge.)
exten =&amp;gt; 7070,n,MeetMe(7070,d)
exten =&amp;gt; 7070,n,Hangup()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The format for the JabberSend() application is as follows:
* Jabber:  the jabber configuration to use, this is the [name] you configured in jabber.conf
* ScreenName: the screen name of the person you want to send an XMPP message to
* Message: the message you want to send&lt;/p&gt;

&lt;p&gt;And that should be pretty much it! Pretty simple eh?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>