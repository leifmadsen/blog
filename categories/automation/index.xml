<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Automation on Leif Madsen.</title>
    <link>http://blog.leifmadsen.com/categories/automation/</link>
    <description>Recent content in Automation on Leif Madsen.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Leif Madsen</copyright>
    <lastBuildDate>Fri, 04 Aug 2017 15:02:00 -0400</lastBuildDate>
    <atom:link href="/categories/automation/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>yakLab Part 1c: Bootstrapping Bifrost with Ansible</title>
      <link>http://blog.leifmadsen.com/blog/2017/08/04/yaklab-part-1c-bootstrapping-bifrost-with-ansible/</link>
      <pubDate>Fri, 04 Aug 2017 15:02:00 -0400</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2017/08/04/yaklab-part-1c-bootstrapping-bifrost-with-ansible/</guid>
      <description>&lt;p&gt;In this scene I&amp;rsquo;ll explore some of the bootstrapping I&amp;rsquo;ve been working on for a
while that will result in a clean, shiny new Bifrost deployment, populated with
inventory, executed from your laptop to a virtual machine.&lt;/p&gt;

&lt;p&gt;Bifrost is an OpenStack project that utilizes OpenStack Ironic to provision
baremetal nodes. This is related to my previous post on &lt;a href=&#34;http://blog.leifmadsen.com/blog/2017/07/12/yaklab-part-1a-building-the-virtual-cobbler-deployment/&#34;&gt;Building the virtual
Cobbler deployment&lt;/a&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Asterisk Docker Container: Phase 1</title>
      <link>http://blog.leifmadsen.com/blog/2015/11/10/asterisk-docker-container-phase-1/</link>
      <pubDate>Tue, 10 Nov 2015 19:41:55 -0500</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2015/11/10/asterisk-docker-container-phase-1/</guid>
      <description>AstriCon At AstriCon 2015 this year, there was a lot (and I mean a lot) of discussion around microservices (Docker), and what effort is required over the next year by the development community in order to make Asterisk better suited to running in that environment.
One of the first things is, clearly, to have a container image that Asterisk runs in. I&amp;rsquo;ve done this a few times now, but having something that can be passed over to the official Asterisk Git repository, and which everyone can contribute to, utilize and play with would be the goal here.</description>
    </item>
    
  </channel>
</rss>
