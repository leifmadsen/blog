<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Leif Madsen.</title>
    <link>http://blog.leifmadsen.com/categories/devops/index.xml</link>
    <description>Recent content in Devops on Leif Madsen.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>yakLab Part 1c: Bootstrapping Bifrost with Ansible</title>
      <link>http://blog.leifmadsen.com/blog/2017/08/04/yaklab-part-1c-bootstrapping-bifrost-with-ansible/</link>
      <pubDate>Fri, 04 Aug 2017 15:02:00 -0400</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2017/08/04/yaklab-part-1c-bootstrapping-bifrost-with-ansible/</guid>
      <description>&lt;p&gt;In this scene I&amp;rsquo;ll explore some of the bootstrapping I&amp;rsquo;ve been working on for a
while that will result in a clean, shiny new Bifrost deployment, populated with
inventory, executed from your laptop to a virtual machine.&lt;/p&gt;

&lt;p&gt;Bifrost is an OpenStack project that utilizes OpenStack Ironic to provision
baremetal nodes. This is related to my previous post on &lt;a href=&#34;http://blog.leifmadsen.com/blog/2017/07/12/yaklab-part-1a-building-the-virtual-cobbler-deployment/&#34;&gt;Building the virtual
Cobbler deployment&lt;/a&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker container results in x509: failed to load system roots and no roots provided</title>
      <link>http://blog.leifmadsen.com/blog/2015/10/30/docker-container-results-in-x509-failed-to-load-system-roots-and-no-roots-provided/</link>
      <pubDate>Fri, 30 Oct 2015 20:30:27 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2015/10/30/docker-container-results-in-x509-failed-to-load-system-roots-and-no-roots-provided/</guid>
      <description>&lt;p&gt;We have a small system running in AWS as a CentOS 7 image. It has a few
containers that we&amp;rsquo;re using to host a few Golang API proxies. We migrated a
customers API proxy that was running on the local VM into a container, and spun
it up. Upon testing, we ran into the following error:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x509: failed to load system roots and no roots provided
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configuring powerline to show working Git branch</title>
      <link>http://blog.leifmadsen.com/blog/2015/09/09/configuring-powerline-to-show-working-git-branch/</link>
      <pubDate>Wed, 09 Sep 2015 21:20:40 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2015/09/09/configuring-powerline-to-show-working-git-branch/</guid>
      <description>&lt;p&gt;So the documentation for
&lt;a href=&#34;http://powerline.readthedocs.org/en/latest/index.html&#34;&gt;Powerline&lt;/a&gt;Â kind of
sucks. I followed
&lt;a href=&#34;http://fedoramagazine.org/add-power-terminal-powerline&#34;&gt;this&lt;/a&gt; pretty good
article on getting started with it. First thing I noticed however is that the
&lt;code&gt;if&lt;/code&gt; statement on the article doesn&amp;rsquo;t work if you don&amp;rsquo;t have powerline
installed (which kind of defeats the purpose of having the &lt;code&gt;if&lt;/code&gt; statement there
at all).
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Selecting Chef Servers With Environment Variables</title>
      <link>http://blog.leifmadsen.com/blog/2012/08/22/selecting-chef-servers-with-environment-variables/</link>
      <pubDate>Wed, 22 Aug 2012 18:49:43 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2012/08/22/selecting-chef-servers-with-environment-variables/</guid>
      <description>Today I got playing around with dynamically selecting different chef servers in preparation for migrating some of our nodes away from our chef-dev server to our chef-live server (which I&amp;rsquo;m currently in the process of building and populating with data). I had been talking in the #chef IRC channel a few weeks back about making things dynamic, or at least easily switchable, when using multiple chef servers for different groups of servers in an environment.</description>
    </item>
    
    <item>
      <title>CentOS 5.8 On AWS EC2 With Xen Kernel (PVGRUB)</title>
      <link>http://blog.leifmadsen.com/blog/2012/08/22/centos-5.8-on-aws-ec2-with-xen-kernel-pvgrub/</link>
      <pubDate>Wed, 22 Aug 2012 14:10:46 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2012/08/22/centos-5.8-on-aws-ec2-with-xen-kernel-pvgrub/</guid>
      <description>At CoreDial we&amp;rsquo;ve been using a lot of AWS EC2 lately for building sandbox infrastructure for testing. Part of the infrastructure is a voice platform utilizing Asterisk 1.4 and 1.8, and those voice platforms are using Zaptel and DAHDI respectively for use with MeetMe(). This hasn&amp;rsquo;t been an issue previously as our testing has either been on bare metal, or in other virtual machine systems where installation of a base image and standard kernel are not an issue.</description>
    </item>
    
    <item>
      <title>Assign unique hostname to dhcp client with dnsmasq</title>
      <link>http://blog.leifmadsen.com/blog/2012/07/23/assign-unique-hostname-to-dhcp-client-with-dnsmasq/</link>
      <pubDate>Mon, 23 Jul 2012 19:14:45 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2012/07/23/assign-unique-hostname-to-dhcp-client-with-dnsmasq/</guid>
      <description>Today I&amp;rsquo;ve been getting our lab environment setup with vagrant to auto-provision our lab servers with chef server in order to allow the development team to quickly and easily turn up and tear down web application servers.
Because when the server gets spun up with vagrant, it registers itself as a new node to the chef server using its hostname. Since using localhost for every node pretty much makes the chef server useless for more than 1 virtual machine at a time, I needed to figure out how to get dnsmasq to assign a unique hostname based on the IP address being provided by dnsmasq to the dhcp client.</description>
    </item>
    
    <item>
      <title>Integration Testing Using Jenkins (Part 1)</title>
      <link>http://blog.leifmadsen.com/blog/2012/06/26/integration-testing-using-jenkins-part-1/</link>
      <pubDate>Tue, 26 Jun 2012 12:51:30 +0000</pubDate>
      
      <guid>http://blog.leifmadsen.com/blog/2012/06/26/integration-testing-using-jenkins-part-1/</guid>
      <description>So for the last week or so, I&amp;rsquo;ve been tasked at CoreDial with adding our own set of integration testing now that we&amp;rsquo;re moving to a more formal deployment method using chef. After much pestering of questions to thehar of Lookout Mobile Security and with help of Google, #chef and jhansche in #jenkins I&amp;rsquo;ve finally got a nice clean proof of concept that we can evaluate and likely deploy.
I&amp;rsquo;ll come back later with another article on my installation issues with jenkins and the solutions that I solved (nothing too terribly complicated), but what I wanted to blog about was the two types of tests that I&amp;rsquo;ve been focusing on and was able to finally solve.</description>
    </item>
    
  </channel>
</rss>
